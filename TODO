 - ssh farm: sort of done, support for generating list of commands

 x status list of frames as generated

 x vcomrender called with same xml as vcomprocess: figures out frame.xml
   file from original xml

 - move all option processing to the java script from the shell script

 - get size working

 x render up to certain frame, encode only up to certain frame

 - ability to refer to len, start, and stop of a frame sequence by name,
   rather than munging around with variables: have to watch for recursion

 x remove attribute specific tags: make them generic, with
   a name which the renderer maps to a switch, and different types of
   sequences, floating, integer, pair, matrix
   <seq type="float" name="rotation" start, stop, loopstart, loopstop,
    step, loopcount, length>

 - add support for interpolated seqs: provide data points, define
   interpolating algorithm (linear, linear-easeI, linear-easeO,
   linear-easeIO, spline), like:

   <attribute
       name="rotate"
       value="int|float|floor|round"
       type="1d|2d|3d|matrix"
       algorithm="linear|spline|quaternion"

       { value="" |
         start="" [ { stop="" | len="" } [ step="" ] [ step="" ]
                    [ loopcount="" loopstart="" loopstop="" ] ]
   >
     [ <point pos="" value=""> <point pos="" value=""> ... ]
   </attribute>

 - frame independent effects: fade in, fade out, mathmap; maybe have to
   separate composite operations from final frame stuff

 - optimize processing for projects with very large numbers of target frames:
   rather than iterating through all frames and determining which clips apply
   to them, generate a map from frames to sets of clips, so only the relevant
   clips are processed

 - optimize processing for large source sequences: maybe a problem with
   FileSet class?

 - add support for directly reading frames and sound from video files

 - hmm, a string based sequence, that is intialized with a series of
   strings, and just iterates around them

 - proper error reporting, showing line and column of errors
